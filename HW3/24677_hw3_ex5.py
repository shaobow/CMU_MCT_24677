# -*- coding: utf-8 -*-
"""24677_HW3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pr9cyNIvx5PQCixqByirefw02Bo329yc
"""

import numpy as np
from scipy import linalg
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

# please make sure 'CMU_Grayscale.png' is in the same direction
img_original = mpimg.imread('CMU_Grayscale.png')
imgplot = plt.imshow(img_original,cmap='gray')
[u,s,v] = linalg.svd(img_original)

sizeU = np.size(u,0)
sizeV = np.size(v,0)

for CR in [0.5,0.1,0.05]:
  idx = round(CR*sizeU*sizeV/(sizeU+sizeV+1)) # calculate numbers of eigen vectors
  print(sizeU,sizeV,idx)
  u_CR = np.matrix(u[:,0:idx])
  v_CR = np.matrix(v[0:idx,:])
  s_CR = np.diag(s[0:idx])
  
  img_CR = u_CR*s_CR*v_CR
  imgplot = plt.imshow(img_CR,cmap='gray')
  plt.title(f"Compress to {CR*100}% original size")
  plt.show()